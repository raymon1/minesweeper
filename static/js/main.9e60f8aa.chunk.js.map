{"version":3,"sources":["constants.js","components/DigitalCounter.jsx","components/Scoreboard.jsx","hooks/useLongPress.jsx","components/Cell.jsx","components/MinesweeperGrid.jsx","components/getNewGrid.js","components/Minesweeper.jsx","hooks/useTimer.jsx","App.js","reportWebVitals.js","index.js"],"names":["gameStatuses","levels","id","text","height","width","minesCount","DigitalCounter","props","str","value","className","padStart","Scoreboard","minesLeft","onChange","e","levelChangeHandler","target","level","map","l","GameStatus","status","gameStatus","onClickHandler","resetHandler","isClicking","timer","onClick","preventDefault","event","isTouchEvent","touches","length","useLongPress","onLongPress","shouldPreventDefault","delay","useState","longPressTriggered","setLongPressTriggered","timeout","useRef","start","useCallback","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onContextMenu","onTouchStart","onTouchEnd","Cell","cell","data","isCovered","number","isMine","neighboringMines","mine","content","flagged","clickedMine","callbacks","handleRightClick","handleLeftClick","MinesweeperGrid","grid","setGrid","refresh","setRefresh","cellGotClicked","x","y","gameOver","newGrid","r","c","hasWon","setGameEnd","cellGotFlagged","reduce","a","queue","k","n","shift","i","Math","max","min","j","push","uncoverEmptyGrid","flagsSetGrid","getNewGrid","mines","calcNneighboringMines","count","setneighboringMines","m","rand","floor","random","i1","j1","randomize","addMines","getNewCells","Minesweeper","setLevel","setMinesLeft","setGameStatus","setIsClicking","isActive","reset","setTimer","useEffect","interval","useTimer","newLevelId","onMouseDown","onMouseUp","onMouseLeave","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"oRACaA,EACG,aADHA,EAEA,UAFAA,EAGJ,MAHIA,EAIH,OAGGC,EAAS,CAClB,CAAEC,GAAI,EAAGC,KAAM,WAAYC,OAAQ,GAAIC,MAAO,GAAIC,WAAY,IAC9D,CAAEJ,GAAI,EAAGC,KAAM,eAAgBC,OAAQ,GAAIC,MAAO,GAAIC,WAAY,IAClE,CAAEJ,GAAI,EAAGC,KAAM,SAAUC,OAAQ,GAAIC,MAAO,GAAIC,WAAY,M,MCPzD,SAASC,EAAeC,GAC3B,IAAMC,EAAM,GAAKD,EAAME,MACvB,OAAQ,qBAAKC,UAAU,kBAAf,SAAkCF,EAAIG,SAAS,EAAG,OCAvD,SAASC,EAAWL,GACvB,OACI,sBAAKG,UAAU,aAAf,UACI,cAACJ,EAAD,CAAgBG,MAAOF,EAAMM,YAC7B,gCACI,qBAAKH,UAAU,cAAf,SACI,wBAAQI,SAAU,SAACC,GAAD,OAAOR,EAAMS,mBAAmBD,EAAEE,OAAOR,QAAQA,MAAOF,EAAMW,MAAhF,SACMlB,EAAOmB,KAAI,SAAAC,GAAC,OAAK,yBAAmBX,MAAOW,EAAEnB,GAA5B,cAAkCmB,EAAElB,KAApC,MAAakB,EAAEnB,WAG1C,cAACoB,EAAD,CAAYC,OAAQf,EAAMgB,WAAYC,eAAgBjB,EAAMkB,aAAcC,WAAYnB,EAAMmB,gBAEhG,cAACpB,EAAD,CAAgBG,MAAOF,EAAMoB,WAOlC,SAASN,EAAWd,GAWvB,OACI,wBAAQG,UAAU,QAAQkB,QAASrB,EAAMiB,eAAzC,SACMjB,EAAMmB,WAAa,gBAZLJ,EAY2Bf,EAAMe,OAXjDA,IAAWvB,EACJ,eACAuB,IAAWvB,EACX,eAEA,kBANf,IAAwBuB,E,uBCyB5B,IAIMO,EAAiB,SAAAC,IAJF,SAAAA,GACjB,MAAO,YAAaA,GAIfC,CAAaD,IAEdA,EAAME,QAAQC,OAAS,GAAKH,EAAMD,gBAClCC,EAAMD,kBAICK,EA7Df,SACIC,EACAP,GAED,IAAD,yDADiD,GACjD,IADIQ,4BACJ,aADiCC,aACjC,MADyC,IACzC,IAEsDC,oBAAS,GAF/D,mBAESC,EAFT,KAE6BC,EAF7B,KAGQC,EAAUC,mBACVzB,EAASyB,mBAETC,EAAQC,uBACV,SAAAd,GACIM,GAAwBN,EAAMb,SAC9Ba,EAAMb,OAAO4B,iBAAiB,WAAYhB,EAAgB,CAC1DiB,SAAS,IAET7B,EAAO8B,QAAUjB,EAAMb,QAE3BwB,EAAQM,QAAUC,YAAW,WACzBb,EAAYL,GACZU,GAAsB,KACvBH,KAEH,CAACF,EAAaE,EAAOD,IAGnBa,EAAQL,uBACV,SAACd,GAAsC,IAA/BoB,IAA8B,yDACtCT,EAAQM,SAAWI,aAAaV,EAAQM,SACxCG,IAAuBX,GAAsBX,IAC7CY,GAAsB,GAClBJ,GAAwBnB,EAAO8B,SAC/B9B,EAAO8B,QAAQK,oBAAoB,WAAYvB,KAGnD,CAACO,EAAsBR,EAASW,IAGpC,MAAO,CACHX,QAAS,SAAAb,GAAC,OAAIkC,EAAMlC,IACpBsC,cAAe,SAAAtC,GACXA,EAAEc,iBACFM,KAEJmB,aAAc,SAAAvC,GAAC,OAAI4B,EAAM5B,IACzBwC,WAAY,SAAAxC,GAAC,OAAIkC,EAAMlC,MC5CxB,SAASyC,EAAKjD,GACjB,IAAMkD,EAAOlD,EAAMmD,KAAKC,UAAY,OAAS,iBACvCC,EAAUrD,EAAMmD,KAAKC,WAAcpD,EAAMsD,OAAiD,GAAjF,eAAiDtD,EAAMmD,KAAKI,kBACrEC,GAAQxD,EAAMmD,KAAKC,WAAapD,EAAMsD,OAAS,YAAc,GAC7DG,EAAUzD,EAAMmD,KAAKC,UACtBpD,EAAMmD,KAAKO,QAAU,eAAO,GAAO1D,EAAMmD,KAAKG,OAAS,eAAOtD,EAAMmD,KAAKI,iBAAmB,EAAIvD,EAAMmD,KAAKI,iBAAmB,GAC7HI,EAAc3D,EAAMmD,KAAKQ,YAAc,eAAiB,GAExDC,EAAYjC,GACd,kBAAM3B,EAAM6D,iBAAiB7D,EAAMmD,SACnC,kBAAMnD,EAAM8D,gBAAgB9D,EAAMmD,SAGtC,OACI,gDAAQhD,UAAS,UAAK+C,EAAL,YAAaG,EAAb,YAAuBG,EAAvB,YAA+BG,IACxCC,GADR,aAGMH,KCfP,SAASM,EAAgB/D,GAAQ,IAAD,EACX+B,mBAAS/B,EAAMgE,MADJ,mBAC5BA,EAD4B,KACtBC,EADsB,OAELlC,mBAAS/B,EAAMkE,SAFV,mBAE5BA,EAF4B,KAEnBC,EAFmB,KASnC,SAASN,EAAiBX,GACtBlD,EAAMoE,iBADsB,MAGb,CAAClB,EAAKmB,EAAGnB,EAAKoB,GAAtBD,EAHqB,KAGlBC,EAHkB,KAK5B,GAAKN,EAAKK,GAAGC,GAAGlB,YAAapD,EAAMuE,SAAnC,CAGA,IAAMC,EAAUR,EAAKpD,KAAI,SAAA6D,GAAC,OAAIA,EAAE7D,KAAI,SAAA8D,GAAC,sBAASA,SAE9CF,EAAQH,GAAGC,GAAGZ,SAAWc,EAAQH,GAAGC,GAAGZ,QAEpCiB,EAAOH,IACNxE,EAAM4E,WAAWpF,GAGrByE,EAAQO,GACRxE,EAAM6E,eAAeL,EAAQH,GAAGC,GAAGZ,UAtBpCQ,IAAYlE,EAAMkE,UACjBC,EAAWnE,EAAMkE,SACjBD,EAAQjE,EAAMgE,OAuBlB,IAAMW,EAAS,SAACX,GAAD,OAAUA,EAAKc,QAAO,SAACC,EAAGN,GAAJ,OAAUM,GAAKN,EAAEK,QAAO,SAACC,EAAGL,GAAJ,OAAUK,IAAML,EAAEpB,SAAWoB,EAAEtB,cAAY,MAAO,IAE/G,SAASU,EAAgBZ,GAAO,IAAD,EACZ,CAACA,EAAKmB,EAAGnB,EAAKoB,GAAtBD,EADoB,KACjBC,EADiB,KAI3B,GAFAtE,EAAMoE,iBAEDJ,EAAKK,GAAGC,GAAGlB,YAAaY,EAAKK,GAAGC,GAAGZ,UAAW1D,EAAMuE,SAGzD,GAAIP,EAAKK,GAAGC,GAAGhB,OAAQ,CACnB,IAAMkB,EAAUR,EAAKpD,KAAI,SAAA6D,GAAC,OAAIA,EAAE7D,KAAI,SAAA8D,GAAC,kCAC9BA,GAD8B,IAEjCtB,WAAWsB,EAAEpB,QAAiBoB,EAAEtB,kBAEpCoB,EAAQH,GAAGC,GAAGX,aAAc,EAE5BM,EAAQO,GACRxE,EAAM4E,WAAWpF,OAEf,CACF,IAAMgF,EAAUR,EAAKpD,KAAI,SAAA6D,GAAC,OAAIA,EAAE7D,KAAI,SAAA8D,GAAC,sBAC9BA,SAWP,GATAF,EAAQH,GAAGC,GAAGlB,WAAY,EAEU,IAAhCY,EAAKK,GAAGC,GAAGf,iBAoBvB,SAA0BS,EAAMd,GAC5B,IAAM8B,EAAQ,CAAC,CAAC9B,EAAKmB,EAAGnB,EAAKoB,IACzBW,EAAI,EACFvD,EAASsC,EAAKtC,OACd7B,EAAQmE,EAAK,GAAGtC,OAEtB,KAAOsD,EAAMtD,OAAS,GAAG,CAErB,IADA,IAAMwD,EAAIF,EAAMtD,OACPb,EAAI,EAAGA,EAAIqE,EAAGrE,IAGnB,IAHyB,IAAD,EACTmE,EAAMG,QADG,mBACjBd,EADiB,KACdC,EADc,KAGfc,EAAIC,KAAKC,IAAI,EAAGjB,EAAI,GAAIe,EAAIC,KAAKE,IAAI7D,EAAQ2C,EAAI,KAAMe,EAC5D,IAAK,IAAII,EAAIH,KAAKC,IAAI,EAAGhB,EAAI,GAAIkB,EAAIH,KAAKE,IAAI1F,EAAOyE,EAAI,KAAMkB,EACtDxB,EAAKoB,GAAGI,GAAGlC,SAAUU,EAAKoB,GAAGI,GAAGpC,WAAcY,EAAKoB,GAAGI,GAAG9B,UAC1DM,EAAKoB,GAAGI,GAAGpC,WAAY,EACY,IAAhCY,EAAKoB,GAAGI,GAAGjC,kBACVyB,EAAMS,KAAK,CAACL,EAAGI,KAQnC/C,YAAW,SAAC+B,GACRP,EAAQO,KACH,GAANS,IAAUjB,IA7CT0B,CAAiBlB,EAAStB,GAG1Be,EAAQO,GAGTG,EAAOH,GAAU,CAChB,IAAMmB,EAAenB,EAAQ5D,KAAI,SAAA6D,GAAC,OAAIA,EAAE7D,KAAI,SAAA8D,GAAC,kCACtCA,GADsC,IAEzChB,QAASgB,EAAEpB,eAGfW,EAAQ0B,GACR3F,EAAM4E,WAAWpF,KAoC7B,OACIwE,EAAKpD,KAAI,SAAC6D,EAAGW,GAAJ,OAAU,qBAAajF,UAAU,MAAvB,SACdsE,EAAE7D,KAAI,SAAC8D,EAAGc,GAAJ,OAAU,cAACvC,EAAD,CAEbE,KAAMuB,EACNZ,gBAAiBA,EACjBD,iBAAkBA,GAHb2B,OAFgBJ,MC9G9B,SAASQ,EAAWlE,EAAQ7B,EAAOC,GAoEtC,OAzBA,SAA6B+F,GAEzB,SAASC,EAAsBzB,EAAGC,GAG9B,IAFA,IAAIyB,EAAQ,EAEHX,EAAIC,KAAKC,IAAI,EAAGjB,EAAI,GAAIe,EAAIC,KAAKE,IAAIM,EAAMnE,OAAQ2C,EAAI,KAAMe,EAClE,IAAK,IAAII,EAAIH,KAAKC,IAAI,EAAGhB,EAAI,GAAIkB,EAAIH,KAAKE,IAAIM,EAAMT,GAAG1D,OAAQ4C,EAAI,KAAMkB,EACjEK,EAAMT,GAAGI,GAAGlC,QACZyC,IAKZ,OAAOA,EAGX,IAAK,IAAIX,EAAI,EAAGA,EAAIS,EAAMnE,SAAU0D,EAChC,IAAK,IAAII,EAAI,EAAGA,EAAIK,EAAMT,GAAG1D,SAAU8D,EACnCK,EAAMT,GAAGI,GAAGjC,iBAAmBuC,EAAsBV,EAAGI,GAIhE,OAAOK,EAGJG,CAxCP,SAAmBhC,GAGf,IAFA,IAAMkB,EAAIlB,EAAKtC,OACTuE,EAAIjC,EAAK,GAAGtC,OACT0D,EAAI,EAAGA,EAAIF,IAAKE,EACrB,IAAK,IAAII,EAAI,EAAGA,EAAIS,IAAKT,EAAG,CACxB,IAAMU,EAAOb,KAAKc,MAAMd,KAAKe,SAAWlB,EAAIe,GACtCI,EAAKhB,KAAKc,MAAMD,EAAOD,GACvBK,EAAKJ,EAAOD,EAHM,EAIK,CAACjC,EAAKqC,GAAIC,GAAKtC,EAAKoB,GAAGI,IAAnDxB,EAAKoB,GAAGI,GAJe,KAIXxB,EAAKqC,GAAIC,GAJE,KAQhC,OAAOtC,EA4BgBuC,CApD3B,SAAkBvC,EAAMlE,GACpB,IAAK,IAAIsF,EAAI,EAAGA,EAAIpB,EAAKtC,QAAU5B,IAAcsF,EAC7C,IAAK,IAAII,EAAI,EAAGA,EAAIxB,EAAKoB,GAAG1D,QAAU5B,IAAc0F,IAAK1F,EACrDkE,EAAKoB,GAAGI,GAAK,CACTlC,QAAQ,GAKpB,OAAOU,EA2C0BwC,CAlErC,SAAqB9E,EAAQ7B,GAEzB,IADA,IAAImE,EAAO,GACFoB,EAAI,EAAGA,EAAI1D,EAAQ0D,IAAK,CAC7BpB,EAAKoB,GAAK,GACV,IAAK,IAAII,EAAI,EAAGA,EAAI3F,EAAO2F,IACvBxB,EAAKoB,GAAGI,GAAK,CACTlC,QAAQ,GAKpB,OAAOU,EAuDmCyC,CAAY/E,EAAQ7B,GAAQC,KACrEc,KAAI,SAAC6D,EAAGW,GAAJ,OAAUX,EAAE7D,KAAI,SAAC8D,EAAGc,GAAJ,MAAW,CAC5BpC,WAAW,EACXE,OAAQoB,EAAEpB,OACVC,iBAAkBmB,EAAEnB,iBACpBc,EAAGe,EACHd,EAAGkB,SCUAkB,MA1Ef,WAAwB,IAAD,EACO3E,mBAAStC,EAAO,IADvB,mBACZkB,EADY,KACLgG,EADK,OAGe5E,mBAASpB,EAAMb,YAH9B,mBAGZQ,EAHY,KAGDsG,EAHC,OAIiB7E,mBAASvC,GAJ1B,mBAIZwB,EAJY,KAIA6F,EAJA,OAKK9E,mBAAS6D,EAAWjF,EAAMf,OAAQe,EAAMd,MAAOc,EAAMb,aAL1D,mBAKZkE,EALY,KAKNC,EALM,OAMWlC,oBAAS,GANpB,mBAMZmC,EANY,KAMHC,EANG,OAOiBpC,oBAAS,GAP1B,mBAOZZ,EAPY,KAOA2F,EAPA,KASb1F,ECjBH,SAAkB2F,EAAUC,GAAQ,IAAD,EACZjF,mBAAS,GADG,mBAC/BX,EAD+B,KACxB6F,EADwB,KAoBtC,OAjBAC,qBAAU,WACN,IAAIC,EAAW,KAaf,OAZIJ,IAAaI,EACbA,EAAW1E,YAAW,WAClBwE,GAAS,SAAA7F,GAAK,OAAIA,EAAQ,OAC3B,KACI+F,GACPvE,aAAauE,GAGbH,GACAC,EAAS,GAGN,kBAAMrE,aAAauE,MAC3B,CAAC/F,EAAO2F,EAAUC,IAEd5F,EDHOgG,CAASpG,IAAexB,EAAsBwB,IAAexB,GAI3E,SAASwH,IACLH,EAAcrH,GACdoH,EAAajG,EAAMb,YACnBmE,EAAQ2B,EAAWjF,EAAMf,OAAQe,EAAMd,MAAOc,EAAMb,aACpDqE,GAAW,SAAAD,GAAO,OAAKA,KAkC3B,OAxCAgD,oBAAUF,EAAO,CAACrG,IAyCd,sBAAKR,UAAU,cAAf,UACI,cAACE,EAAD,CACIC,UAAWA,EACXc,MAAOA,EACPJ,WAAYA,EACZL,MAAOA,EAAMjB,GACbe,mBAbZ,SAA4B4G,GACrBA,IAAe1G,GACdgG,EAASlH,EAAO4H,KAYZlG,WAAYA,EACZD,aAAc8F,IAClB,qBAAK7G,UAAU,OAAOmH,YAAa,kBAAMR,GAAc,IAAOS,UAAW,kBAAMT,GAAc,IAAQU,aAAc,kBAAMV,GAAc,IAAvI,SACI,cAAC/C,EAAD,CACIG,QAASA,EACTF,KAAMA,EACNO,SA5CSvD,IAAexB,GAAoBwB,IAAexB,EA6C3DqF,eA3ChB,SAAwBnB,GAEhBkD,EADDlD,EACcpD,EAAU,EAGVA,EAAU,IAuCf8D,eAnChB,WACOpD,IAAexB,GACdqH,EAAcrH,IAkCNoF,WA9BhB,SAAoB7D,GAChB8F,EAAc9F,GACVA,IAAWvB,GACXoH,EAAa,YExCVa,MARf,WACE,OACE,qBAAKtH,UAAU,MAAf,SACE,cAAC,EAAD,OCMSuH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,EAAgBc,QAAQC,O","file":"static/js/main.9e60f8aa.chunk.js","sourcesContent":["\nexport const gameStatuses = {\n    notStarted: \"notStarted\",\n    running: \"running\",\n    won: \"won\",\n    lost: \"lost\"\n}\n\nexport const levels = [\n    { id: 0, text: \"Beginner\", height: 10, width: 10, minesCount: 10 },\n    { id: 1, text: \"Intermediate\", height: 16, width: 16, minesCount: 44 },\n    { id: 2, text: \"Expert\", height: 30, width: 30, minesCount: 100 },\n]","import React from 'react';\nimport './Scoreboard.component.css';\n\n\nexport function DigitalCounter(props) {\n    const str = \"\" + props.value\n    return (<div className=\"digital-counter\">{str.padStart(3, '0')}</div>);\n}\n\nexport default DigitalCounter;","import React from 'react';\nimport { gameStatuses, levels } from '../constants';\nimport { DigitalCounter } from './DigitalCounter';\n\n\n\nexport function Scoreboard(props) {\n    return (\n        <div className=\"scoreboard\">\n            <DigitalCounter value={props.minesLeft} />\n            <div>\n                <div className=\"select-wrap\">\n                    <select onChange={(e) => props.levelChangeHandler(e.target.value)} value={props.level}>\n                        { levels.map(l => (<option key={l.id} value={l.id}> {l.text} </option>)) }\n                    </select>\n                </div>\n                <GameStatus status={props.gameStatus} onClickHandler={props.resetHandler} isClicking={props.isClicking} />       \n            </div>\n            <DigitalCounter value={props.timer} />\n        </div>\n    );\n}\n\nexport default Scoreboard;\n\nexport function GameStatus(props) {\n    function getStatusEmoji(status) {\n        if (status === gameStatuses.lost) {\n            return '😞';\n        } else if (status === gameStatuses.won) {\n            return '😎';\n        } else {\n            return '😊'\n        }\n    }\n\n    return (\n        <button className=\"reset\" onClick={props.onClickHandler}>\n            { props.isClicking ? '😲' : getStatusEmoji(props.status) }\n        </button>\n    );\n}\n","import { useCallback, useRef, useState } from \"react\";\n\nfunction useLongPress (\n    onLongPress,\n    onClick,\n    { shouldPreventDefault = true, delay = 300 } = {}\n) {\n  \n    const [longPressTriggered, setLongPressTriggered] = useState(false);\n    const timeout = useRef();\n    const target = useRef();\n\n    const start = useCallback(\n        event => {\n        if (shouldPreventDefault && event.target) {\n            event.target.addEventListener(\"touchend\", preventDefault, {\n            passive: false\n            });\n            target.current = event.target;\n        }\n        timeout.current = setTimeout(() => {\n            onLongPress(event);\n            setLongPressTriggered(true);\n        }, delay);\n        },\n        [onLongPress, delay, shouldPreventDefault]\n    );\n\n    const clear = useCallback(\n        (event, shouldTriggerClick = true) => {\n        timeout.current && clearTimeout(timeout.current);\n        shouldTriggerClick && !longPressTriggered && onClick();\n        setLongPressTriggered(false);\n        if (shouldPreventDefault && target.current) {\n            target.current.removeEventListener(\"touchend\", preventDefault);\n        }\n        },\n        [shouldPreventDefault, onClick, longPressTriggered]\n    );\n\n    return {\n        onClick: e => clear(e),\n        onContextMenu: e => {\n            e.preventDefault();\n            onLongPress();\n        },\n        onTouchStart: e => start(e),\n        onTouchEnd: e => clear(e)\n    };\n};\n\nconst isTouchEvent = event => {\n    return \"touches\" in event;\n};\n\nconst preventDefault = event => {\n    if (!isTouchEvent(event)) return;\n\n    if (event.touches.length < 2 && event.preventDefault) {\n        event.preventDefault();\n    }\n};\n\nexport default useLongPress;\n","import React from 'react';\nimport useLongPress from \"../hooks/useLongPress\";\n\nexport function Cell(props) {\n    const cell = props.data.isCovered ? 'cell' : 'uncovered-cell';\n    const number = !props.data.isCovered && !props.isMine ? `cell-${props.data.neighboringMines}` : '';\n    const mine = !props.data.isCovered && props.isMine ? 'cell-mine' : '';\n    const content = props.data.isCovered ?\n        (props.data.flagged ? '🚩' : '') : (props.data.isMine ? '💣' : props.data.neighboringMines > 0 ? props.data.neighboringMines : '');\n    const clickedMine = props.data.clickedMine ? 'clicked-mine' : ''\n\n    const callbacks = useLongPress(\n        () => props.handleRightClick(props.data),\n        () => props.handleLeftClick(props.data)\n    )\n    \n    return (\n        <button className={`${cell} ${number} ${mine} ${clickedMine}`}\n            {...callbacks}>\n            \n            { content}\n\n        </button>\n    );\n}\n\nexport default Cell;\n","import React, { useState } from 'react';\nimport { Cell } from './Cell';\nimport { gameStatuses } from '../constants';\n\n\nexport function MinesweeperGrid(props) {\n    const [grid, setGrid] = useState(props.grid);\n    const [refresh, setRefresh] = useState(props.refresh);\n\n    if(refresh !== props.refresh) {\n        setRefresh(props.refresh);\n        setGrid(props.grid);\n    }\n\n    function handleRightClick(cell) {\n        props.cellGotClicked();\n\n        const [x, y] = [cell.x, cell.y];\n\n        if (!grid[x][y].isCovered || props.gameOver)\n            return;\n\n        const newGrid = grid.map(r => r.map(c => ({...c})));\n\n        newGrid[x][y].flagged = !newGrid[x][y].flagged;\n        \n        if(hasWon(newGrid)) {\n            props.setGameEnd(gameStatuses.won);\n        }\n\n        setGrid(newGrid);\n        props.cellGotFlagged(newGrid[x][y].flagged);\n    }\n\n    const hasWon = (grid) => grid.reduce((a, r) => a && r.reduce((a, c) => a && (c.isMine || !c.isCovered), true), true);\n\n    function handleLeftClick(cell) {\n        const [x, y] = [cell.x, cell.y];\n        props.cellGotClicked();\n\n        if (!grid[x][y].isCovered || grid[x][y].flagged || props.gameOver)\n            return;\n\n        if (grid[x][y].isMine) {\n            const newGrid = grid.map(r => r.map(c => ({\n                ...c,\n                isCovered: c.isMine ? false : c.isCovered\n            })));\n            newGrid[x][y].clickedMine = true;\n\n            setGrid(newGrid);\n            props.setGameEnd(gameStatuses.lost);\n        }\n        else  {\n            const newGrid = grid.map(r => r.map(c => ({\n                ...c\n            })));\n            newGrid[x][y].isCovered = false;\n            \n            if (grid[x][y].neighboringMines === 0) {\n                uncoverEmptyGrid(newGrid, cell);\n            }\n            else {\n                setGrid(newGrid);\n            }\n\n            if(hasWon(newGrid)) {\n                const flagsSetGrid = newGrid.map(r => r.map(c => ({\n                    ...c,\n                    flagged: c.isMine\n                })));\n                \n                setGrid(flagsSetGrid);\n                props.setGameEnd(gameStatuses.won);\n            }\n        }\n    }\n\n    // BFS\n    function uncoverEmptyGrid(grid, cell) {\n        const queue = [[cell.x, cell.y]];\n        let k = 0;\n        const length = grid.length;\n        const width = grid[0].length;\n\n        while (queue.length > 0) {\n            const n = queue.length;\n            for (let l = 0; l < n; l++) {\n                const [x, y] = queue.shift();\n\n                for (let i = Math.max(0, x - 1); i < Math.min(length, x + 2); ++i) {\n                    for (let j = Math.max(0, y - 1); j < Math.min(width, y + 2); ++j) {\n                        if (!grid[i][j].isMine && grid[i][j].isCovered && !grid[i][j].flagged) {\n                            grid[i][j].isCovered = false;\n                            if(grid[i][j].neighboringMines === 0) {\n                                queue.push([i, j]);\n                            }\n                        }\n                    }\n                }\n            }\n\n            // update after each breadth search cycle for animation\n            setTimeout((newGrid) => {\n                setGrid(newGrid);\n            }, k++ * 50, grid);\n        }\n    }\n\n    return (\n        grid.map((r, i) => <div key={i} className=\"row\">\n            {r.map((c, j) => <Cell\n                key={j}\n                data={c}\n                handleLeftClick={handleLeftClick}\n                handleRightClick={handleRightClick} />)}\n        </div>\n        )\n    );\n}\n","export function getNewGrid(length, width, minesCount) {\n\n    function getNewCells(length, width) {\n        let grid = [];\n        for (var i = 0; i < length; i++) {\n            grid[i] = [];\n            for (var j = 0; j < width; j++) {\n                grid[i][j] = {\n                    isMine: false\n                };\n            }\n        }\n\n        return grid;\n    }\n\n    function addMines(grid, minesCount) {\n        for (var i = 0; i < grid.length && minesCount; ++i) {\n            for (var j = 0; j < grid[i].length && minesCount; ++j, --minesCount) {\n                grid[i][j] = {\n                    isMine: true\n                };\n            }\n        }\n\n        return grid;\n    }\n\n    function randomize(grid) {\n        const n = grid.length;\n        const m = grid[0].length;\n        for (let i = 0; i < n; ++i) {\n            for (let j = 0; j < m; ++j) {\n                const rand = Math.floor(Math.random() * n * m);\n                const i1 = Math.floor(rand / m);\n                const j1 = rand % m;\n                [grid[i][j], grid[i1][j1]] = [grid[i1][j1], grid[i][j]];\n            }\n        }\n\n        return grid;\n    }\n\n    function setneighboringMines(mines) {\n\n        function calcNneighboringMines(x, y) {\n            var count = 0;\n\n            for (var i = Math.max(0, x - 1); i < Math.min(mines.length, x + 2); ++i) {\n                for (var j = Math.max(0, y - 1); j < Math.min(mines[i].length, y + 2); ++j) {\n                    if (mines[i][j].isMine) {\n                        count++;\n                    }\n                }\n            }\n\n            return count;\n        }\n\n        for (var i = 0; i < mines.length; ++i) {\n            for (var j = 0; j < mines[i].length; ++j) {\n                mines[i][j].neighboringMines = calcNneighboringMines(i, j);\n            }\n        }\n\n        return mines;\n    }\n\n    return setneighboringMines(randomize(addMines(getNewCells(length, width), minesCount)))\n        .map((r, i) => r.map((c, j) => ({\n            isCovered: true,\n            isMine: c.isMine,\n            neighboringMines: c.neighboringMines,\n            x: i,\n            y: j,\n        })));\n}\n","import React, { useEffect, useState } from 'react';\nimport { Scoreboard } from './Scoreboard';\nimport './Cell.component.css';\nimport './Minesweeper.component.css';\nimport { MinesweeperGrid } from './MinesweeperGrid';\nimport { getNewGrid } from './getNewGrid';\nimport { gameStatuses, levels } from '../constants';\nimport { useTimer } from '../hooks/useTimer';\n\n\nfunction Minesweeper() {\n    const [level, setLevel] = useState(levels[0]);\n\n    const [minesLeft, setMinesLeft] = useState(level.minesCount);\n    const [gameStatus, setGameStatus] = useState(gameStatuses.notStarted);\n    const [grid, setGrid] = useState(getNewGrid(level.height, level.width, level.minesCount));\n    const [refresh, setRefresh] = useState(false);\n    const [isClicking, setIsClicking] = useState(false);\n\n    const timer = useTimer(gameStatus === gameStatuses.running, gameStatus === gameStatuses.notStarted);\n\n    useEffect(reset, [level] );\n\n    function reset() {\n        setGameStatus(gameStatuses.notStarted);\n        setMinesLeft(level.minesCount);\n        setGrid(getNewGrid(level.height, level.width, level.minesCount));\n        setRefresh(refresh => !refresh);\n    }\n    \n    \n    const isGameOver = () => gameStatus === gameStatuses.won || gameStatus === gameStatuses.lost;\n\n    function cellGotFlagged(flagged) {\n        if(flagged) {\n            setMinesLeft(minesLeft-1);\n        }\n        else {\n            setMinesLeft(minesLeft+1);\n        }\n    }\n    \n    function cellGotClicked() {\n        if(gameStatus === gameStatuses.notStarted) {\n            setGameStatus(gameStatuses.running);\n        }\n    }\n\n    function setGameEnd(status) {\n        setGameStatus(status);\n        if (status === gameStatuses.won) {\n            setMinesLeft(0);\n        }\n    }\n\n    function levelChangeHandler(newLevelId) {\n        if(newLevelId !== level) {\n            setLevel(levels[newLevelId]);\n        }\n    }\n\n    return (\n        <div className=\"minesweeper\">\n            <Scoreboard \n                minesLeft={minesLeft}\n                timer={timer}\n                gameStatus={gameStatus}\n                level={level.id}\n                levelChangeHandler={levelChangeHandler}\n                isClicking={isClicking}\n                resetHandler={reset} />\n            <div className=\"grid\" onMouseDown={() => setIsClicking(true)} onMouseUp={() => setIsClicking(false)} onMouseLeave={() => setIsClicking(false)}>\n                <MinesweeperGrid\n                    refresh={refresh}\n                    grid={grid}\n                    gameOver={isGameOver()}\n                    cellGotFlagged={cellGotFlagged}\n                    cellGotClicked={cellGotClicked}\n                    setGameEnd={setGameEnd} />\n            </div>\n        </div>\n    );\n}\n\nexport default Minesweeper;\n\n","import { useState, useEffect } from 'react';\n\nexport function useTimer(isActive, reset) {\n    const [timer, setTimer] = useState(0);\n\n    useEffect(() => {\n        let interval = null;\n        if (isActive && !interval) {\n            interval = setTimeout(() => {\n                setTimer(timer => timer + 1);\n            }, 1000);\n        } else if (interval) {\n            clearTimeout(interval);\n        }\n\n        if (reset) {\n            setTimer(0);\n        }\n\n        return () => clearTimeout(interval);\n    }, [timer, isActive, reset]);\n\n    return timer;\n}\n","import './App.css';\nimport Minesweeper from './components/Minesweeper';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Minesweeper />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}